// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.6
// source: Representations.proto

package Representations

import (
	Common "github.com/maltegrosse/adapt-go/Common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RepresentationCodeSource_RepresentationCodeSourceEnum int32

const (
	RepresentationCodeSource_ADAPT        RepresentationCodeSource_RepresentationCodeSourceEnum = 0
	RepresentationCodeSource_ISO11783_DDI RepresentationCodeSource_RepresentationCodeSourceEnum = 1
	RepresentationCodeSource_ISO11783_SPN RepresentationCodeSource_RepresentationCodeSourceEnum = 2
	RepresentationCodeSource_J1939_SPN    RepresentationCodeSource_RepresentationCodeSourceEnum = 3
	RepresentationCodeSource_User_Defined RepresentationCodeSource_RepresentationCodeSourceEnum = 4
)

// Enum value maps for RepresentationCodeSource_RepresentationCodeSourceEnum.
var (
	RepresentationCodeSource_RepresentationCodeSourceEnum_name = map[int32]string{
		0: "ADAPT",
		1: "ISO11783_DDI",
		2: "ISO11783_SPN",
		3: "J1939_SPN",
		4: "User_Defined",
	}
	RepresentationCodeSource_RepresentationCodeSourceEnum_value = map[string]int32{
		"ADAPT":        0,
		"ISO11783_DDI": 1,
		"ISO11783_SPN": 2,
		"J1939_SPN":    3,
		"User_Defined": 4,
	}
)

func (x RepresentationCodeSource_RepresentationCodeSourceEnum) Enum() *RepresentationCodeSource_RepresentationCodeSourceEnum {
	p := new(RepresentationCodeSource_RepresentationCodeSourceEnum)
	*p = x
	return p
}

func (x RepresentationCodeSource_RepresentationCodeSourceEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RepresentationCodeSource_RepresentationCodeSourceEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_Representations_proto_enumTypes[0].Descriptor()
}

func (RepresentationCodeSource_RepresentationCodeSourceEnum) Type() protoreflect.EnumType {
	return &file_Representations_proto_enumTypes[0]
}

func (x RepresentationCodeSource_RepresentationCodeSourceEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RepresentationCodeSource_RepresentationCodeSourceEnum.Descriptor instead.
func (RepresentationCodeSource_RepresentationCodeSourceEnum) EnumDescriptor() ([]byte, []int) {
	return file_Representations_proto_rawDescGZIP(), []int{7, 0}
}

type EnumeratedRepresentation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnumeratedMembers     []*EnumerationMember `protobuf:"bytes,1,rep,name=EnumeratedMembers,proto3" json:"EnumeratedMembers,omitempty"`
	RepresentationGroupId int64                `protobuf:"varint,2,opt,name=RepresentationGroupId,proto3" json:"RepresentationGroupId,omitempty"`
}

func (x *EnumeratedRepresentation) Reset() {
	*x = EnumeratedRepresentation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Representations_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumeratedRepresentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumeratedRepresentation) ProtoMessage() {}

func (x *EnumeratedRepresentation) ProtoReflect() protoreflect.Message {
	mi := &file_Representations_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumeratedRepresentation.ProtoReflect.Descriptor instead.
func (*EnumeratedRepresentation) Descriptor() ([]byte, []int) {
	return file_Representations_proto_rawDescGZIP(), []int{0}
}

func (x *EnumeratedRepresentation) GetEnumeratedMembers() []*EnumerationMember {
	if x != nil {
		return x.EnumeratedMembers
	}
	return nil
}

func (x *EnumeratedRepresentation) GetRepresentationGroupId() int64 {
	if x != nil {
		return x.RepresentationGroupId
	}
	return 0
}

type EnumeratedRepresentationGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *Common.CompoundIdentifier `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Description string                     `protobuf:"bytes,2,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *EnumeratedRepresentationGroup) Reset() {
	*x = EnumeratedRepresentationGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Representations_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumeratedRepresentationGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumeratedRepresentationGroup) ProtoMessage() {}

func (x *EnumeratedRepresentationGroup) ProtoReflect() protoreflect.Message {
	mi := &file_Representations_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumeratedRepresentationGroup.ProtoReflect.Descriptor instead.
func (*EnumeratedRepresentationGroup) Descriptor() ([]byte, []int) {
	return file_Representations_proto_rawDescGZIP(), []int{1}
}

func (x *EnumeratedRepresentationGroup) GetId() *Common.CompoundIdentifier {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *EnumeratedRepresentationGroup) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type EnumeratedValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Representation *Representation    `protobuf:"bytes,1,opt,name=Representation,proto3" json:"Representation,omitempty"`
	Value          *EnumerationMember `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *EnumeratedValue) Reset() {
	*x = EnumeratedValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Representations_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumeratedValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumeratedValue) ProtoMessage() {}

func (x *EnumeratedValue) ProtoReflect() protoreflect.Message {
	mi := &file_Representations_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumeratedValue.ProtoReflect.Descriptor instead.
func (*EnumeratedValue) Descriptor() ([]byte, []int) {
	return file_Representations_proto_rawDescGZIP(), []int{2}
}

func (x *EnumeratedValue) GetRepresentation() *Representation {
	if x != nil {
		return x.Representation
	}
	return nil
}

func (x *EnumeratedValue) GetValue() *EnumerationMember {
	if x != nil {
		return x.Value
	}
	return nil
}

type EnumerationMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int64  `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *EnumerationMember) Reset() {
	*x = EnumerationMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Representations_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumerationMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumerationMember) ProtoMessage() {}

func (x *EnumerationMember) ProtoReflect() protoreflect.Message {
	mi := &file_Representations_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumerationMember.ProtoReflect.Descriptor instead.
func (*EnumerationMember) Descriptor() ([]byte, []int) {
	return file_Representations_proto_rawDescGZIP(), []int{3}
}

func (x *EnumerationMember) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *EnumerationMember) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type NumericRepresentation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DecimalDigits int64                          `protobuf:"varint,1,opt,name=DecimalDigits,proto3" json:"DecimalDigits,omitempty"`
	MinValue      *NumericValue                  `protobuf:"bytes,2,opt,name=MinValue,proto3" json:"MinValue,omitempty"`
	MaxValue      *NumericValue                  `protobuf:"bytes,3,opt,name=MaxValue,proto3" json:"MaxValue,omitempty"`
	Dimension     *Common.UnitOfMeasureDimension `protobuf:"bytes,4,opt,name=Dimension,proto3" json:"Dimension,omitempty"`
}

func (x *NumericRepresentation) Reset() {
	*x = NumericRepresentation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Representations_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumericRepresentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumericRepresentation) ProtoMessage() {}

func (x *NumericRepresentation) ProtoReflect() protoreflect.Message {
	mi := &file_Representations_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumericRepresentation.ProtoReflect.Descriptor instead.
func (*NumericRepresentation) Descriptor() ([]byte, []int) {
	return file_Representations_proto_rawDescGZIP(), []int{4}
}

func (x *NumericRepresentation) GetDecimalDigits() int64 {
	if x != nil {
		return x.DecimalDigits
	}
	return 0
}

func (x *NumericRepresentation) GetMinValue() *NumericValue {
	if x != nil {
		return x.MinValue
	}
	return nil
}

func (x *NumericRepresentation) GetMaxValue() *NumericValue {
	if x != nil {
		return x.MaxValue
	}
	return nil
}

func (x *NumericRepresentation) GetDimension() *Common.UnitOfMeasureDimension {
	if x != nil {
		return x.Dimension
	}
	return nil
}

type NumericRepresentationValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Representation            *Representation       `protobuf:"bytes,1,opt,name=Representation,proto3" json:"Representation,omitempty"`
	Value                     *NumericValue         `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	UserProvidedUnitOfMeasure *Common.UnitOfMeasure `protobuf:"bytes,3,opt,name=UserProvidedUnitOfMeasure,proto3" json:"UserProvidedUnitOfMeasure,omitempty"`
}

func (x *NumericRepresentationValue) Reset() {
	*x = NumericRepresentationValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Representations_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumericRepresentationValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumericRepresentationValue) ProtoMessage() {}

func (x *NumericRepresentationValue) ProtoReflect() protoreflect.Message {
	mi := &file_Representations_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumericRepresentationValue.ProtoReflect.Descriptor instead.
func (*NumericRepresentationValue) Descriptor() ([]byte, []int) {
	return file_Representations_proto_rawDescGZIP(), []int{5}
}

func (x *NumericRepresentationValue) GetRepresentation() *Representation {
	if x != nil {
		return x.Representation
	}
	return nil
}

func (x *NumericRepresentationValue) GetValue() *NumericValue {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *NumericRepresentationValue) GetUserProvidedUnitOfMeasure() *Common.UnitOfMeasure {
	if x != nil {
		return x.UserProvidedUnitOfMeasure
	}
	return nil
}

type NumericValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value         float64               `protobuf:"fixed64,1,opt,name=Value,proto3" json:"Value,omitempty"`
	UnitOfMeasure *Common.UnitOfMeasure `protobuf:"bytes,2,opt,name=UnitOfMeasure,proto3" json:"UnitOfMeasure,omitempty"`
}

func (x *NumericValue) Reset() {
	*x = NumericValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Representations_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumericValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumericValue) ProtoMessage() {}

func (x *NumericValue) ProtoReflect() protoreflect.Message {
	mi := &file_Representations_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumericValue.ProtoReflect.Descriptor instead.
func (*NumericValue) Descriptor() ([]byte, []int) {
	return file_Representations_proto_rawDescGZIP(), []int{6}
}

func (x *NumericValue) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *NumericValue) GetUnitOfMeasure() *Common.UnitOfMeasure {
	if x != nil {
		return x.UnitOfMeasure
	}
	return nil
}

type RepresentationCodeSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RepresentationCodeSource) Reset() {
	*x = RepresentationCodeSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Representations_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepresentationCodeSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepresentationCodeSource) ProtoMessage() {}

func (x *RepresentationCodeSource) ProtoReflect() protoreflect.Message {
	mi := &file_Representations_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepresentationCodeSource.ProtoReflect.Descriptor instead.
func (*RepresentationCodeSource) Descriptor() ([]byte, []int) {
	return file_Representations_proto_rawDescGZIP(), []int{7}
}

type Representation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              *Common.CompoundIdentifier `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	CodeSource      *RepresentationCodeSource  `protobuf:"bytes,2,opt,name=CodeSource,proto3" json:"CodeSource,omitempty"`
	Code            string                     `protobuf:"bytes,3,opt,name=Code,proto3" json:"Code,omitempty"`
	Description     string                     `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	LongDescription string                     `protobuf:"bytes,5,opt,name=LongDescription,proto3" json:"LongDescription,omitempty"`
	// Types that are assignable to Subtype:
	//
	//	*Representation_EnumeratedRepresentation
	//	*Representation_NumericRepresentation
	//	*Representation_StringRepresentation
	Subtype isRepresentation_Subtype `protobuf_oneof:"subtype"`
}

func (x *Representation) Reset() {
	*x = Representation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Representations_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Representation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Representation) ProtoMessage() {}

func (x *Representation) ProtoReflect() protoreflect.Message {
	mi := &file_Representations_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Representation.ProtoReflect.Descriptor instead.
func (*Representation) Descriptor() ([]byte, []int) {
	return file_Representations_proto_rawDescGZIP(), []int{8}
}

func (x *Representation) GetId() *Common.CompoundIdentifier {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Representation) GetCodeSource() *RepresentationCodeSource {
	if x != nil {
		return x.CodeSource
	}
	return nil
}

func (x *Representation) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Representation) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Representation) GetLongDescription() string {
	if x != nil {
		return x.LongDescription
	}
	return ""
}

func (m *Representation) GetSubtype() isRepresentation_Subtype {
	if m != nil {
		return m.Subtype
	}
	return nil
}

func (x *Representation) GetEnumeratedRepresentation() *EnumeratedRepresentation {
	if x, ok := x.GetSubtype().(*Representation_EnumeratedRepresentation); ok {
		return x.EnumeratedRepresentation
	}
	return nil
}

func (x *Representation) GetNumericRepresentation() *NumericRepresentation {
	if x, ok := x.GetSubtype().(*Representation_NumericRepresentation); ok {
		return x.NumericRepresentation
	}
	return nil
}

func (x *Representation) GetStringRepresentation() *StringRepresentation {
	if x, ok := x.GetSubtype().(*Representation_StringRepresentation); ok {
		return x.StringRepresentation
	}
	return nil
}

type isRepresentation_Subtype interface {
	isRepresentation_Subtype()
}

type Representation_EnumeratedRepresentation struct {
	EnumeratedRepresentation *EnumeratedRepresentation `protobuf:"bytes,101,opt,name=EnumeratedRepresentation,proto3,oneof"`
}

type Representation_NumericRepresentation struct {
	NumericRepresentation *NumericRepresentation `protobuf:"bytes,102,opt,name=NumericRepresentation,proto3,oneof"`
}

type Representation_StringRepresentation struct {
	StringRepresentation *StringRepresentation `protobuf:"bytes,103,opt,name=StringRepresentation,proto3,oneof"`
}

func (*Representation_EnumeratedRepresentation) isRepresentation_Subtype() {}

func (*Representation_NumericRepresentation) isRepresentation_Subtype() {}

func (*Representation_StringRepresentation) isRepresentation_Subtype() {}

type RepresentationValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       int64  `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Designator string `protobuf:"bytes,2,opt,name=Designator,proto3" json:"Designator,omitempty"`
	Color      int64  `protobuf:"varint,3,opt,name=Color,proto3" json:"Color,omitempty"`
	// Types that are assignable to Subtype:
	//
	//	*RepresentationValue_EnumeratedValue
	//	*RepresentationValue_NumericRepresentationValue
	//	*RepresentationValue_StringValue
	Subtype isRepresentationValue_Subtype `protobuf_oneof:"subtype"`
}

func (x *RepresentationValue) Reset() {
	*x = RepresentationValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Representations_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepresentationValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepresentationValue) ProtoMessage() {}

func (x *RepresentationValue) ProtoReflect() protoreflect.Message {
	mi := &file_Representations_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepresentationValue.ProtoReflect.Descriptor instead.
func (*RepresentationValue) Descriptor() ([]byte, []int) {
	return file_Representations_proto_rawDescGZIP(), []int{9}
}

func (x *RepresentationValue) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RepresentationValue) GetDesignator() string {
	if x != nil {
		return x.Designator
	}
	return ""
}

func (x *RepresentationValue) GetColor() int64 {
	if x != nil {
		return x.Color
	}
	return 0
}

func (m *RepresentationValue) GetSubtype() isRepresentationValue_Subtype {
	if m != nil {
		return m.Subtype
	}
	return nil
}

func (x *RepresentationValue) GetEnumeratedValue() *EnumeratedValue {
	if x, ok := x.GetSubtype().(*RepresentationValue_EnumeratedValue); ok {
		return x.EnumeratedValue
	}
	return nil
}

func (x *RepresentationValue) GetNumericRepresentationValue() *NumericRepresentationValue {
	if x, ok := x.GetSubtype().(*RepresentationValue_NumericRepresentationValue); ok {
		return x.NumericRepresentationValue
	}
	return nil
}

func (x *RepresentationValue) GetStringValue() *StringValue {
	if x, ok := x.GetSubtype().(*RepresentationValue_StringValue); ok {
		return x.StringValue
	}
	return nil
}

type isRepresentationValue_Subtype interface {
	isRepresentationValue_Subtype()
}

type RepresentationValue_EnumeratedValue struct {
	EnumeratedValue *EnumeratedValue `protobuf:"bytes,101,opt,name=EnumeratedValue,proto3,oneof"`
}

type RepresentationValue_NumericRepresentationValue struct {
	NumericRepresentationValue *NumericRepresentationValue `protobuf:"bytes,102,opt,name=NumericRepresentationValue,proto3,oneof"`
}

type RepresentationValue_StringValue struct {
	StringValue *StringValue `protobuf:"bytes,103,opt,name=StringValue,proto3,oneof"`
}

func (*RepresentationValue_EnumeratedValue) isRepresentationValue_Subtype() {}

func (*RepresentationValue_NumericRepresentationValue) isRepresentationValue_Subtype() {}

func (*RepresentationValue_StringValue) isRepresentationValue_Subtype() {}

type StringRepresentation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinCharacters int64 `protobuf:"varint,1,opt,name=MinCharacters,proto3" json:"MinCharacters,omitempty"`
	MaxCharacters int64 `protobuf:"varint,2,opt,name=MaxCharacters,proto3" json:"MaxCharacters,omitempty"`
}

func (x *StringRepresentation) Reset() {
	*x = StringRepresentation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Representations_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringRepresentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringRepresentation) ProtoMessage() {}

func (x *StringRepresentation) ProtoReflect() protoreflect.Message {
	mi := &file_Representations_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringRepresentation.ProtoReflect.Descriptor instead.
func (*StringRepresentation) Descriptor() ([]byte, []int) {
	return file_Representations_proto_rawDescGZIP(), []int{10}
}

func (x *StringRepresentation) GetMinCharacters() int64 {
	if x != nil {
		return x.MinCharacters
	}
	return 0
}

func (x *StringRepresentation) GetMaxCharacters() int64 {
	if x != nil {
		return x.MaxCharacters
	}
	return 0
}

type StringValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Representation *Representation `protobuf:"bytes,1,opt,name=Representation,proto3" json:"Representation,omitempty"`
	Value          string          `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *StringValue) Reset() {
	*x = StringValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Representations_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringValue) ProtoMessage() {}

func (x *StringValue) ProtoReflect() protoreflect.Message {
	mi := &file_Representations_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringValue.ProtoReflect.Descriptor instead.
func (*StringValue) Descriptor() ([]byte, []int) {
	return file_Representations_proto_rawDescGZIP(), []int{11}
}

func (x *StringValue) GetRepresentation() *Representation {
	if x != nil {
		return x.Representation
	}
	return nil
}

func (x *StringValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_Representations_proto protoreflect.FileDescriptor

var file_Representations_proto_rawDesc = []byte{
	0x0a, 0x15, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x41, 0x44, 0x41, 0x50, 0x54, 0x2e, 0x52,
	0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x0c,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa8, 0x01, 0x0a,
	0x18, 0x45, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a, 0x11, 0x45, 0x6e, 0x75,
	0x6d, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x41, 0x44, 0x41, 0x50, 0x54, 0x2e, 0x52, 0x65, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x6e, 0x75,
	0x6d, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x11,
	0x45, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x12, 0x34, 0x0a, 0x15, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x15, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x73, 0x0a, 0x1d, 0x45, 0x6e, 0x75, 0x6d, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x30, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x41, 0x44, 0x41, 0x50, 0x54, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x02, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa0, 0x01, 0x0a,
	0x0f, 0x45, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x4d, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x41, 0x44, 0x41, 0x50, 0x54,
	0x2e, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0e, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3e, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x41, 0x44, 0x41, 0x50, 0x54, 0x2e, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x3d, 0x0a, 0x11, 0x45, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x83,
	0x02, 0x0a, 0x15, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x44, 0x65, 0x63, 0x69,
	0x6d, 0x61, 0x6c, 0x44, 0x69, 0x67, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x44, 0x69, 0x67, 0x69, 0x74, 0x73, 0x12, 0x3f,
	0x0a, 0x08, 0x4d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x41, 0x44, 0x41, 0x50, 0x54, 0x2e, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x4d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x3f, 0x0a, 0x08, 0x4d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x41, 0x44, 0x41, 0x50, 0x54, 0x2e, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69,
	0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x4d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x42, 0x0a, 0x09, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x41, 0x44, 0x41, 0x50, 0x54, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x44, 0x69, 0x6d, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x81, 0x02, 0x0a, 0x1a, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63,
	0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x41, 0x44,
	0x41, 0x50, 0x54, 0x2e, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0e, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x41, 0x44, 0x41, 0x50, 0x54, 0x2e, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69,
	0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x59, 0x0a,
	0x19, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x55, 0x6e, 0x69,
	0x74, 0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x41, 0x44, 0x41, 0x50, 0x54, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x55, 0x6e, 0x69, 0x74, 0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x19, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x55, 0x6e, 0x69, 0x74, 0x4f,
	0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x22, 0x67, 0x0a, 0x0c, 0x4e, 0x75, 0x6d, 0x65,
	0x72, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x41,
	0x0a, 0x0d, 0x55, 0x6e, 0x69, 0x74, 0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x41, 0x44, 0x41, 0x50, 0x54, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x52, 0x0d, 0x55, 0x6e, 0x69, 0x74, 0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x22, 0x8a, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x6e,
	0x0a, 0x1c, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x09,
	0x0a, 0x05, 0x41, 0x44, 0x41, 0x50, 0x54, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x53, 0x4f,
	0x31, 0x31, 0x37, 0x38, 0x33, 0x5f, 0x44, 0x44, 0x49, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x49,
	0x53, 0x4f, 0x31, 0x31, 0x37, 0x38, 0x33, 0x5f, 0x53, 0x50, 0x4e, 0x10, 0x02, 0x12, 0x0d, 0x0a,
	0x09, 0x4a, 0x31, 0x39, 0x33, 0x39, 0x5f, 0x53, 0x50, 0x4e, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c,
	0x55, 0x73, 0x65, 0x72, 0x5f, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x04, 0x22, 0xb6,
	0x04, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x30, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x41, 0x44, 0x41, 0x50, 0x54, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52,
	0x02, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x0a, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x41, 0x44, 0x41, 0x50, 0x54, 0x2e,
	0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0a, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x4c, 0x6f,
	0x6e, 0x67, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x4c, 0x6f, 0x6e, 0x67, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6d, 0x0a, 0x18, 0x45, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x41, 0x44, 0x41, 0x50, 0x54, 0x2e, 0x52,
	0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x45,
	0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x18, 0x45, 0x6e, 0x75, 0x6d, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x64, 0x0a, 0x15, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x41, 0x44, 0x41, 0x50, 0x54, 0x2e, 0x52, 0x65, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4e, 0x75, 0x6d, 0x65, 0x72,
	0x69, 0x63, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x15, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x61, 0x0a, 0x14, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x41, 0x44, 0x41, 0x50, 0x54, 0x2e,
	0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x14, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07,
	0x73, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x22, 0xfb, 0x02, 0x0a, 0x13, 0x52, 0x65, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x52, 0x0a, 0x0f, 0x45, 0x6e, 0x75,
	0x6d, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x41, 0x44, 0x41, 0x50, 0x54, 0x2e, 0x52, 0x65, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x45, 0x6e,
	0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x73, 0x0a,
	0x1a, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x41, 0x44, 0x41, 0x50, 0x54, 0x2e, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69,
	0x63, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x1a, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x52,
	0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x41, 0x44, 0x41, 0x50, 0x54, 0x2e,
	0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x73, 0x75,
	0x62, 0x74, 0x79, 0x70, 0x65, 0x22, 0x62, 0x0a, 0x14, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a,
	0x0d, 0x4d, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x4d, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x4d, 0x61, 0x78, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x22, 0x72, 0x0a, 0x0b, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x41, 0x44, 0x41, 0x50, 0x54, 0x2e, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x31, 0x5a,
	0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x6c, 0x74,
	0x65, 0x67, 0x72, 0x6f, 0x73, 0x73, 0x65, 0x2f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x2d, 0x67, 0x6f,
	0x2f, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Representations_proto_rawDescOnce sync.Once
	file_Representations_proto_rawDescData = file_Representations_proto_rawDesc
)

func file_Representations_proto_rawDescGZIP() []byte {
	file_Representations_proto_rawDescOnce.Do(func() {
		file_Representations_proto_rawDescData = protoimpl.X.CompressGZIP(file_Representations_proto_rawDescData)
	})
	return file_Representations_proto_rawDescData
}

var file_Representations_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_Representations_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_Representations_proto_goTypes = []interface{}{
	(RepresentationCodeSource_RepresentationCodeSourceEnum)(0), // 0: ADAPT.Representations.RepresentationCodeSource.RepresentationCodeSourceEnum
	(*EnumeratedRepresentation)(nil),                           // 1: ADAPT.Representations.EnumeratedRepresentation
	(*EnumeratedRepresentationGroup)(nil),                      // 2: ADAPT.Representations.EnumeratedRepresentationGroup
	(*EnumeratedValue)(nil),                                    // 3: ADAPT.Representations.EnumeratedValue
	(*EnumerationMember)(nil),                                  // 4: ADAPT.Representations.EnumerationMember
	(*NumericRepresentation)(nil),                              // 5: ADAPT.Representations.NumericRepresentation
	(*NumericRepresentationValue)(nil),                         // 6: ADAPT.Representations.NumericRepresentationValue
	(*NumericValue)(nil),                                       // 7: ADAPT.Representations.NumericValue
	(*RepresentationCodeSource)(nil),                           // 8: ADAPT.Representations.RepresentationCodeSource
	(*Representation)(nil),                                     // 9: ADAPT.Representations.Representation
	(*RepresentationValue)(nil),                                // 10: ADAPT.Representations.RepresentationValue
	(*StringRepresentation)(nil),                               // 11: ADAPT.Representations.StringRepresentation
	(*StringValue)(nil),                                        // 12: ADAPT.Representations.StringValue
	(*Common.CompoundIdentifier)(nil),                          // 13: ADAPT.Common.CompoundIdentifier
	(*Common.UnitOfMeasureDimension)(nil),                      // 14: ADAPT.Common.UnitOfMeasureDimension
	(*Common.UnitOfMeasure)(nil),                               // 15: ADAPT.Common.UnitOfMeasure
}
var file_Representations_proto_depIdxs = []int32{
	4,  // 0: ADAPT.Representations.EnumeratedRepresentation.EnumeratedMembers:type_name -> ADAPT.Representations.EnumerationMember
	13, // 1: ADAPT.Representations.EnumeratedRepresentationGroup.Id:type_name -> ADAPT.Common.CompoundIdentifier
	9,  // 2: ADAPT.Representations.EnumeratedValue.Representation:type_name -> ADAPT.Representations.Representation
	4,  // 3: ADAPT.Representations.EnumeratedValue.Value:type_name -> ADAPT.Representations.EnumerationMember
	7,  // 4: ADAPT.Representations.NumericRepresentation.MinValue:type_name -> ADAPT.Representations.NumericValue
	7,  // 5: ADAPT.Representations.NumericRepresentation.MaxValue:type_name -> ADAPT.Representations.NumericValue
	14, // 6: ADAPT.Representations.NumericRepresentation.Dimension:type_name -> ADAPT.Common.UnitOfMeasureDimension
	9,  // 7: ADAPT.Representations.NumericRepresentationValue.Representation:type_name -> ADAPT.Representations.Representation
	7,  // 8: ADAPT.Representations.NumericRepresentationValue.Value:type_name -> ADAPT.Representations.NumericValue
	15, // 9: ADAPT.Representations.NumericRepresentationValue.UserProvidedUnitOfMeasure:type_name -> ADAPT.Common.UnitOfMeasure
	15, // 10: ADAPT.Representations.NumericValue.UnitOfMeasure:type_name -> ADAPT.Common.UnitOfMeasure
	13, // 11: ADAPT.Representations.Representation.Id:type_name -> ADAPT.Common.CompoundIdentifier
	8,  // 12: ADAPT.Representations.Representation.CodeSource:type_name -> ADAPT.Representations.RepresentationCodeSource
	1,  // 13: ADAPT.Representations.Representation.EnumeratedRepresentation:type_name -> ADAPT.Representations.EnumeratedRepresentation
	5,  // 14: ADAPT.Representations.Representation.NumericRepresentation:type_name -> ADAPT.Representations.NumericRepresentation
	11, // 15: ADAPT.Representations.Representation.StringRepresentation:type_name -> ADAPT.Representations.StringRepresentation
	3,  // 16: ADAPT.Representations.RepresentationValue.EnumeratedValue:type_name -> ADAPT.Representations.EnumeratedValue
	6,  // 17: ADAPT.Representations.RepresentationValue.NumericRepresentationValue:type_name -> ADAPT.Representations.NumericRepresentationValue
	12, // 18: ADAPT.Representations.RepresentationValue.StringValue:type_name -> ADAPT.Representations.StringValue
	9,  // 19: ADAPT.Representations.StringValue.Representation:type_name -> ADAPT.Representations.Representation
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_Representations_proto_init() }
func file_Representations_proto_init() {
	if File_Representations_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Representations_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumeratedRepresentation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Representations_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumeratedRepresentationGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Representations_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumeratedValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Representations_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumerationMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Representations_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumericRepresentation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Representations_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumericRepresentationValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Representations_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumericValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Representations_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepresentationCodeSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Representations_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Representation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Representations_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepresentationValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Representations_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringRepresentation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Representations_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_Representations_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*Representation_EnumeratedRepresentation)(nil),
		(*Representation_NumericRepresentation)(nil),
		(*Representation_StringRepresentation)(nil),
	}
	file_Representations_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*RepresentationValue_EnumeratedValue)(nil),
		(*RepresentationValue_NumericRepresentationValue)(nil),
		(*RepresentationValue_StringValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Representations_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Representations_proto_goTypes,
		DependencyIndexes: file_Representations_proto_depIdxs,
		EnumInfos:         file_Representations_proto_enumTypes,
		MessageInfos:      file_Representations_proto_msgTypes,
	}.Build()
	File_Representations_proto = out.File
	file_Representations_proto_rawDesc = nil
	file_Representations_proto_goTypes = nil
	file_Representations_proto_depIdxs = nil
}
